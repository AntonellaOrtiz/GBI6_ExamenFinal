rm(list=ls())
# Escriba aquí la función long_df
long_df <- df %>%  dplyr::select(bcr_patient_barcode, dataset, GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
# Escriba aquí la función long_df
long_df <- df %>%  dplyr::select(bcr_patient_barcode, dataset, GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
library(dplyr)
# Escriba aquí la función long_df
long_df <- df %>%  dplyr::select(bcr_patient_barcode, dataset, GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
# Escriba aquí la función long_df
long_df <- df %>%  tidyr::piwotlonger(names_from = dataset, values_from = GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
# Escriba aquí la función long_df
long_df <- df %>%  dplyr::select(bcr_patient_barcode, dataset, GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
getwd()
df <- read.csv("data/mRNA_expr.csv")
# Escriba aquí la función long_df
long_df <- df %>%  dplyr::select(bcr_patient_barcode, dataset, GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
View(long_df)
View(df)
tidyr::pivot_longer(names_from = dataset, values_from = GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
# Escriba aquí la función long_df
long_df <- df %>%  dplyr::select(bcr_patient_barcode, dataset, GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
tidyr::pivot_longer(names_from = dataset, values_from = GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
tidyr::pivot_longer(names_from = dataset, values_from = GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
tidyr::pivot_longer(names_from = dataset, values_from = GATA3, XBP1, ESR1, MUC1, FN1, GAPDH)
tidyr::pivot_longer(names_from = dataset, values_from = GATA3)
# Escriba aquí la función long_df
long_df <- df %>%  dplyr::select(bcr_patient_barcode, dataset, GATA3, PTEN, XBP1, ESR1, MUC1, FN1, GAPDH)
View(long_df)
```{r funcion_long}
# Escriba aquí la función long_df
long_df <- df %>%
pivot_longer(
names_to = c("bcr_patient_barcode", "dataset", "gen", "expresion_level"),
values_to = "count"
)
# Escriba aquí la función long_df
long_df <- df %>% pivot_longer(
names_to = c("bcr_patient_barcode", "dataset", "gen", "expresion_level"),
values_to = "count"
)
# Escriba aquí la función long_df
long_df <- df %>% pivot_longer(
names_to = c("bcr_patient_barcode", "dataset", "gen", "expresion_level"),
values_to = "count"
)
# Escriba aquí la función long_df
long_df <- pivot_longer(df, 3:9, names_to = "gen", values_to = "expresion_level")
# Escriba aquí la función long_df
long_df <- pivoy_longer(df, 3:9, names_to = "gen", values_to = "expresion_level")
# Escriba aquí la función long_df
long_df <- pivot_longer(df, 3:9, names_to = "gen", values_to = "expresion_level")
# Escriba aquí la función long_df
long_df <- df %>%
tidyr::pivot_longer(3:9, names_to = "gen", values_to = "expresion_level")
View(long_df)
library(tidyr)
# Escriba aquí la función long_df
long_df <- df %>%
tidyr::pivot_longer(3:9, names_to = "gen", values_to = "expresion_level")
### [1 PUNTO] 1.3 Cree una función de nombre ```long_df``` para transformar la data ```df``` de la forma wide a long.
```{r, echo=FALSE}
# Escriba aquí la función long_df
long_df <- df %>%
tidyr::pivot_longer(3:9, names_to = "gen", values_to = "expresion_level")
# Escriba aquí la función long_df
long_df <- df %>%
tidyr::pivot_longer(3:9, names_to = "gen", values_to = "expresion_level")
library(dplyr)
# Genere la data df_long
df_long <- long_df %>% [,-1]
# Genere la data df_long
df_long <- long_df[,-1]
View(long_df)
View(df_long)
library(dplyr)
install.packages("sjPlot")
View(long_df)
library(sjPlot)
install.packages("sjPlot")
install.packages("sjPlot", lib="C:/Program Files/R/R-4.1.2/library")
library(sjPlot, lib.loc = "C:/Program Files/R/R-4.1.2/library")
# Escriba el código para crear el Descriptive table
library(sjPlot)
library(sjmisc, lib.loc = "C:/Program Files/R/R-4.1.2/library")
df <- read.csv("data/mRNA_expr.csv")
echo=FALSE
getwd()
df <- read.csv("data/mRNA_expr.csv")
echo=FALSE
knitr::opts_chunk$set(error = TRUE)
# Escriba aquí la función long_df
library(dplyr)
long_df <- df %>%
tidyr::pivot_longer(3:9, names_to = "gen", values_to = "expresion_level")
# Genere la data df_long
df_long <- long_df[,-1]
# Escriba el código para crear el Descriptive table
library(sjPlot)
long_df_group <- long_df %>% group_by (dataset, gen)
View(long_df_group)
descr()
descr(long_df_group)
getwd()
setwd(C:/Users/Antonella Ortiz/Documents/GitHub/GBI6_ExamenFinal)
setwd(Users/Antonella Ortiz/Documents/GitHub/GBI6_ExamenFinal)
setwd(Users/AntonellaOrtiz/Documents/GitHub/GBI6_ExamenFinal)
setwd(Documents/GitHub/GBI6_ExamenFinal)
getwd()
setwd()
setwd(Users\Antonella Ortiz\Documents\GitHub\GBI6_ExamenFinal)
setwd(\Users\Antonella Ortiz\Documents\GitHub\GBI6_ExamenFinal)
setwd("\Users\Antonella Ortiz\Documents\GitHub\GBI6_ExamenFinal")
setwd("Users\Antonella Ortiz\Documents\GitHub\GBI6_ExamenFinal")
setwd("Users/Antonella Ortiz/Documents/GitHub/GBI6_ExamenFinal")
getwd()
# Escriba el código para crear el Descriptive table
library(sjPlot)
sink("results/mRNA_expr_summary.doc")
long_df_group <- long_df %>% group_by (dataset, gen)
descr(long_df_group)
descr(long_df_group)
sink()
sink("results/mRNA_expr_summary.doc")
sink("results\mRNA_expr_summary.doc")
sink("results/mRNA_expr_summary.docx")
sink("mRNA_expr_summary.docx")
sink("mRNA_expr_summary.docx")
sink("C:\Users\Antonella Ortiz\Documents\GitHub\GBI6_ExamenFinal\results\mRNA_expr_summary.docx")
descr(long_df_group, out = "viewer")
# Escriba el código para crear el Descriptive table
library(sjPlot)
long_df_group <- long_df %>% group_by (dataset, gen)
descr(long_df_group, out = "viewer")
descr(long_df_group, out = "viewer")
write.table(descr(long_df_group, out = "viewer"), file = "results/mRNA_expr_summary.doc")
write.table(descr(long_df_group, out = "viewer"), file = "mRNA_expr_summary.doc")
descr(long_df_group, out = "viewer")
### [0.5 PUNTOS] 1.1 Defina su directorio de trabajo.
```{r wd}
### [0.5 PUNTOS] 1.1 Defina su directorio de trabajo.
```{r wd}
rm(list=ls())
rm(list=ls())
setwd("/Users/Antonella Ortiz/Documents/GitHub/GBI6_ExamenFinal")
getwd()
descr(long_df_group, out = "viewer")
### [0.5 PUNTOS] 1.1 Defina su directorio de trabajo.
```{r wd}
rm(list=ls())
setwd("/Users/Antonella Ortiz/Documents/GitHub/GBI6_ExamenFinal")
getwd()
### [0.5 PUNTOS] 1.1 Defina su directorio de trabajo.
```{r wd}
rm(list=ls())
setwd("/Users/Antonella Ortiz/Documents/GitHub/GBI6_ExamenFinal")
getwd()
```
rm(list=ls())
setwd("/Users/Antonella Ortiz/Documents/GitHub/GBI6_ExamenFinal")
getwd()
### [0.5 PUNTOS] 1.2. Cargue la data "mRNA_expr.csv"
```{r data}
df <- read.csv("data/mRNA_expr.csv")
View(df)
# Escriba el código para crear la función tcga_boxplots
gen1 <- df %>% dplyr::filter(gen == GATA3)
gen2 <- df %>% dplyr::filter(gen == PTEN)
